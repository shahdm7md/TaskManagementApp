@model IEnumerable<TaskManagementApp.Models.UserTask>

@{
    ViewData["Title"] = "Index";
}

@if (!Model.Any())
{
    <div class="no-tasks-message">
        <h1>
            You don't have any tasks, please
            <a asp-action="AddTask" style="font-weight: bold; color: #232946;">create one!</a>
        </h1>
    </div>
    <style>
        .no-tasks-message {
            text-align: center !important;
            font-size: 2em !important; /* حجم الخط */
            margin-top: 50px !important; /* المساحة العلوية */
            color: white !important; /* لون النص */
            height: calc(100vh - 100px) !important; /* المساحة المتاحة في الصفحة */
            display: flex !important;
            align-items: center !important;
            justify-content: center !important;
        }
    </style>
}
else
{
    <div class="tasks-header">
        <img src="~/images/task.png" alt="Tasks Icon" style="width: 50px; height: 50px; margin-right: 10px;" />
        <h1>My Tasks</h1>
    </div>

    <p>
        <button class="btn btn-create" onclick="window.location.href='@Url.Action("AddTask")'">Create New</button>
    </p>

    <div class="task-table-container">
        <table class="table" id="taskTable">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.TaskId)</th>
                    <th>@Html.DisplayNameFor(model => model.Title)</th>
                    <th>@Html.DisplayNameFor(model => model.Description)</th>
                    <th>@Html.DisplayNameFor(model => model.DueDate)</th>
                    <th>@Html.DisplayNameFor(model => model.Priority)</th>
                    <th>@Html.DisplayNameFor(model => model.IsCompleted)</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="task-row @(item.IsCompleted ? "completed" : "")" data-task-id="@item.TaskId">
                        <td>@Html.DisplayFor(modelItem => item.TaskId)</td>
                        <td>@Html.DisplayFor(modelItem => item.Title)</td>
                        <td>@Html.DisplayFor(modelItem => item.Description)</td>
                        <td>@Html.DisplayFor(modelItem => item.DueDate)</td>
                        <td>@Html.DisplayFor(modelItem => item.Priority)</td>
                        <td>
                            <input type="checkbox" class="toggle-completion" data-task-id="@item.TaskId" @(item.IsCompleted ? "checked" : "") />
                        </td>
                        @* <td>
                            @Html.ActionLink("Edit", "Edit", new { Id = item.TaskId }) |
                            @Html.ActionLink("Details", "Details", new { Id = item.TaskId }) |
                            @Html.ActionLink("Delete", "ConfirmDelete", new { Id = item.TaskId })
                        </td> *@
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { Id = item.TaskId }) |
                            @Html.ActionLink("Details", "Details", new { Id = item.TaskId }) |
                            <a href="#" onclick="openModal(@item.TaskId, '@item.Title')">Delete</a>
                        </td>


                    </tr>
                }
            </tbody>
        </table>
    </div>
    <!-- Popup Modal -->
    <div id="confirmDeleteModal" class="modal" style="display:none;">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <h4>Are You Sure To Delete This Task?</h4>
            <div>
               
                <dl class="row">
                    <dt class="col-sm-2">Task ID</dt>
                    <dd class="col-sm-10" id="taskId"></dd>
                    <dt class="col-sm-2">Title</dt>
                    <dd class="col-sm-10" id="taskTitle"></dd>
                  
                </dl>
                <button id="confirmDeleteButton" class="btn btn-danger" style="margin-right: 10px;">Delete</button>
                <button class="btn btn-secondary" onclick="closeModal()">Cancel</button>

            </div>
        </div>
    </div>

   @*  <style>
        .modal {
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 50%;
            height: 50%;
            overflow: auto;
            background-color: rgb(0,0,0);
            background-color: rgba(0,0,0,0.4);
        }

        .modal-content {
            background-color: white;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            border-radius: 15px;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }
    </style> *@
    <style>
        .modal {
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgb(0,0,0);
            background-color: rgba(0,0,0,0.4);
        }

        .modal-content {
            background-color: rgba(255, 255, 255, 0.8); /* لون أبيض شفاف */
            margin: 10% auto; /* تقليل المسافة من الأعلى */
            padding: 20px;
            border: 1px solid #888;
            width: 30%; /* عرض أصغر */
            border-radius: 15px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* إضافة ظل */
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }

        h4 {
            color: #232946; /* لون العنوان */
        }
    </style>



    <style>
       
        .tasks-header {
            text-align: center !important;
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 20px;
        }

       
        .btn-create {
            background-color: #eebbc3;
            color: white;
            padding: 10px 30px;
            border: none;
            border-radius: 50px;
            font-size: 1.2em;
            font-weight: bold;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .btn-create:hover {
                background-color: #e8a0b3; /* تأثير عند التمرير */
            }

        .completed {
            text-decoration: line-through;
            color: gray;
        }

            .completed input[type="checkbox"] {
                accent-color: green;
            }

        /* لون الخط في جدول المهام */
        table {
            color: #232946;
        }

        /* جعل الروابط شفافة قليلاً */
        a {
            opacity: 0.8;
            color: #232946;
        }

            a:hover {
                opacity: 1;
            }

        /* تصميم المربع الأبيض الشفاف حول الجدول */
        .task-table-container {
            background-color: rgba(255, 255, 255, 0.5); /* خلفية بيضاء شفافة */
            border-radius: 15px;
            padding: 20px;
            margin-top: 20px;
        }
    </style>

    @section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.toggle-completion').on('change', function () {
                var taskId = $(this).data('task-id');
                var isCompleted = $(this).is(':checked');
                $.ajax({
                    url: '@Url.Action("ToggleCompletion")',
                        type: 'POST',
                        data: { id: taskId, isCompleted: isCompleted },
                        success: function (response) {
                            if (response.success) {
                                var row = $('tr[data-task-id="' + taskId + '"]');
                                if (isCompleted) {
                                    row.addClass('completed');
                                    $('#taskTable tbody').append(row);
                                } else {
                                    row.removeClass('completed');
                                    location.reload();
                                }
                            } else {
                                alert('Failed to update task status.');
                            }
                        },
                        error: function () {
                            alert('An error occurred.');
                        }
                    });
                });
            });
           
                function openModal(taskId, taskTitle) {
                    document.getElementById("taskId").innerText = taskId;
                    document.getElementById("taskTitle").innerText = taskTitle;
                    document.getElementById("confirmDeleteModal").style.display = "block";
                }

            function closeModal() {
                document.getElementById("confirmDeleteModal").style.display = "none";
            }

            document.getElementById("confirmDeleteButton").onclick = function () {
                // نفذ عملية الحذف
                var taskId = document.getElementById("taskId").innerText;
                window.location.href = '/Task/Delete/' + taskId; // انتقل إلى صفحة الحذف
            }
        

        </script>
    }
}
